// Generated by view binder compiler. Do not edit!
package com.example.b07projectapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.b07projectapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAnnouncementDetailAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button14;

  @NonNull
  public final TextView edTimePost;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final TextView tvContent;

  @NonNull
  public final TextView tvPoster;

  @NonNull
  public final TextView tvTitleAnnounce;

  private ActivityAnnouncementDetailAdminBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button button14, @NonNull TextView edTimePost, @NonNull TextView textView20,
      @NonNull TextView tvContent, @NonNull TextView tvPoster, @NonNull TextView tvTitleAnnounce) {
    this.rootView = rootView;
    this.button14 = button14;
    this.edTimePost = edTimePost;
    this.textView20 = textView20;
    this.tvContent = tvContent;
    this.tvPoster = tvPoster;
    this.tvTitleAnnounce = tvTitleAnnounce;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAnnouncementDetailAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAnnouncementDetailAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_announcement_detail_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAnnouncementDetailAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button14;
      Button button14 = ViewBindings.findChildViewById(rootView, id);
      if (button14 == null) {
        break missingId;
      }

      id = R.id.edTimePost;
      TextView edTimePost = ViewBindings.findChildViewById(rootView, id);
      if (edTimePost == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.tvContent;
      TextView tvContent = ViewBindings.findChildViewById(rootView, id);
      if (tvContent == null) {
        break missingId;
      }

      id = R.id.tvPoster;
      TextView tvPoster = ViewBindings.findChildViewById(rootView, id);
      if (tvPoster == null) {
        break missingId;
      }

      id = R.id.tvTitleAnnounce;
      TextView tvTitleAnnounce = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleAnnounce == null) {
        break missingId;
      }

      return new ActivityAnnouncementDetailAdminBinding((ConstraintLayout) rootView, button14,
          edTimePost, textView20, tvContent, tvPoster, tvTitleAnnounce);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
