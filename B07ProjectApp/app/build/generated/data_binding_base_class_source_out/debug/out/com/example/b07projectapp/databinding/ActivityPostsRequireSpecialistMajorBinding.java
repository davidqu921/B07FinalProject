// Generated by view binder compiler. Do not edit!
package com.example.b07projectapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.b07projectapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostsRequireSpecialistMajorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button back3Btn;

  @NonNull
  public final EditText editTextTextMultiLine2;

  @NonNull
  public final Button no2Btn;

  @NonNull
  public final Button yes2Btn;

  private ActivityPostsRequireSpecialistMajorBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button back3Btn, @NonNull EditText editTextTextMultiLine2, @NonNull Button no2Btn,
      @NonNull Button yes2Btn) {
    this.rootView = rootView;
    this.back3Btn = back3Btn;
    this.editTextTextMultiLine2 = editTextTextMultiLine2;
    this.no2Btn = no2Btn;
    this.yes2Btn = yes2Btn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostsRequireSpecialistMajorBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostsRequireSpecialistMajorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_posts_require_specialist_major, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostsRequireSpecialistMajorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back3Btn;
      Button back3Btn = ViewBindings.findChildViewById(rootView, id);
      if (back3Btn == null) {
        break missingId;
      }

      id = R.id.editTextTextMultiLine2;
      EditText editTextTextMultiLine2 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextMultiLine2 == null) {
        break missingId;
      }

      id = R.id.no2Btn;
      Button no2Btn = ViewBindings.findChildViewById(rootView, id);
      if (no2Btn == null) {
        break missingId;
      }

      id = R.id.yes2Btn;
      Button yes2Btn = ViewBindings.findChildViewById(rootView, id);
      if (yes2Btn == null) {
        break missingId;
      }

      return new ActivityPostsRequireSpecialistMajorBinding((ConstraintLayout) rootView, back3Btn,
          editTextTextMultiLine2, no2Btn, yes2Btn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
